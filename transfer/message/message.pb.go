// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: message.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TYPE int32

const (
	TYPE_INTEGER TYPE = 0
	TYPE_FLOAT   TYPE = 1
	TYPE_BYTES   TYPE = 2
	TYPE_STRING  TYPE = 3
	TYPE_BOOLEAN TYPE = 4
)

// Enum value maps for TYPE.
var (
	TYPE_name = map[int32]string{
		0: "INTEGER",
		1: "FLOAT",
		2: "BYTES",
		3: "STRING",
		4: "BOOLEAN",
	}
	TYPE_value = map[string]int32{
		"INTEGER": 0,
		"FLOAT":   1,
		"BYTES":   2,
		"STRING":  3,
		"BOOLEAN": 4,
	}
)

func (x TYPE) Enum() *TYPE {
	p := new(TYPE)
	*p = x
	return p
}

func (x TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (TYPE) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TYPE.Descriptor instead.
func (TYPE) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

type METHOD int32

const (
	METHOD_LOGIN                         METHOD = 0
	METHOD_RENEW_ENC                     METHOD = 1
	METHOD_RENEW_DEC                     METHOD = 2
	METHOD_DELETE_KEY                    METHOD = 3
	METHOD_STORE_SINGLE_OBJECT           METHOD = 4
	METHOD_LOAD_SINGLE_OBJECT            METHOD = 5
	METHOD_OPERATE_SINGLE_OBJECT         METHOD = 6
	METHOD_STORE_LIST                    METHOD = 7
	METHOD_LOAD_LIST                     METHOD = 8
	METHOD_LOAD_LIST_ELEMENT_BY_INDEX    METHOD = 9
	METHOD_LOAD_LIST_ELEMENT_BY_RANGE    METHOD = 10
	METHOD_DELETE_LIST_ELEMENT_BY_INDEX  METHOD = 11
	METHOD_POP_LIST_FRONT                METHOD = 12
	METHOD_POP_LIST_BACK                 METHOD = 13
	METHOD_STORE_MAP                     METHOD = 14
	METHOD_STORE_MAP_ELEMENT_BY_KEY      METHOD = 15
	METHOD_LOAD_MAP                      METHOD = 16
	METHOD_LOAD_MAP_ELEMENT_BY_KEY       METHOD = 17
	METHOD_STORE_SET                     METHOD = 18
	METHOD_LOAD_SET                      METHOD = 19
	METHOD_CONTAINERS_SET_ELEMENT        METHOD = 20
	METHOD_INTERSECT_SET                 METHOD = 21
	METHOD_UNION_SET                     METHOD = 22
	METHOD_DIFFERENCE_SET                METHOD = 23
	METHOD_STORE_QUEUE                   METHOD = 25
	METHOD_LOAD_QUEUE                    METHOD = 26
	METHOD_PUSH_QUEUE_ELEMENT            METHOD = 27
	METHOD_POP_QUEUE_ELEMENT             METHOD = 28
	METHOD_STORE_STACK                   METHOD = 29
	METHOD_LOAD_STACK                    METHOD = 30
	METHOD_PUSH_STACK_ELEMENT            METHOD = 31
	METHOD_POP_STACK_ELEMENT             METHOD = 32
	METHOD_STORE_SORTED_SET              METHOD = 33
	METHOD_LOAD_SORTED_SET               METHOD = 34
	METHOD_CONTAINERS_SORTED_SET_ELEMENT METHOD = 35
	METHOD_INTERSECT_SORTED_SET          METHOD = 36
	METHOD_UNION_SORTED_SET              METHOD = 37
	METHOD_DIFFERENCE_SORTED_SET         METHOD = 38
)

// Enum value maps for METHOD.
var (
	METHOD_name = map[int32]string{
		0:  "LOGIN",
		1:  "RENEW_ENC",
		2:  "RENEW_DEC",
		3:  "DELETE_KEY",
		4:  "STORE_SINGLE_OBJECT",
		5:  "LOAD_SINGLE_OBJECT",
		6:  "OPERATE_SINGLE_OBJECT",
		7:  "STORE_LIST",
		8:  "LOAD_LIST",
		9:  "LOAD_LIST_ELEMENT_BY_INDEX",
		10: "LOAD_LIST_ELEMENT_BY_RANGE",
		11: "DELETE_LIST_ELEMENT_BY_INDEX",
		12: "POP_LIST_FRONT",
		13: "POP_LIST_BACK",
		14: "STORE_MAP",
		15: "STORE_MAP_ELEMENT_BY_KEY",
		16: "LOAD_MAP",
		17: "LOAD_MAP_ELEMENT_BY_KEY",
		18: "STORE_SET",
		19: "LOAD_SET",
		20: "CONTAINERS_SET_ELEMENT",
		21: "INTERSECT_SET",
		22: "UNION_SET",
		23: "DIFFERENCE_SET",
		25: "STORE_QUEUE",
		26: "LOAD_QUEUE",
		27: "PUSH_QUEUE_ELEMENT",
		28: "POP_QUEUE_ELEMENT",
		29: "STORE_STACK",
		30: "LOAD_STACK",
		31: "PUSH_STACK_ELEMENT",
		32: "POP_STACK_ELEMENT",
		33: "STORE_SORTED_SET",
		34: "LOAD_SORTED_SET",
		35: "CONTAINERS_SORTED_SET_ELEMENT",
		36: "INTERSECT_SORTED_SET",
		37: "UNION_SORTED_SET",
		38: "DIFFERENCE_SORTED_SET",
	}
	METHOD_value = map[string]int32{
		"LOGIN":                         0,
		"RENEW_ENC":                     1,
		"RENEW_DEC":                     2,
		"DELETE_KEY":                    3,
		"STORE_SINGLE_OBJECT":           4,
		"LOAD_SINGLE_OBJECT":            5,
		"OPERATE_SINGLE_OBJECT":         6,
		"STORE_LIST":                    7,
		"LOAD_LIST":                     8,
		"LOAD_LIST_ELEMENT_BY_INDEX":    9,
		"LOAD_LIST_ELEMENT_BY_RANGE":    10,
		"DELETE_LIST_ELEMENT_BY_INDEX":  11,
		"POP_LIST_FRONT":                12,
		"POP_LIST_BACK":                 13,
		"STORE_MAP":                     14,
		"STORE_MAP_ELEMENT_BY_KEY":      15,
		"LOAD_MAP":                      16,
		"LOAD_MAP_ELEMENT_BY_KEY":       17,
		"STORE_SET":                     18,
		"LOAD_SET":                      19,
		"CONTAINERS_SET_ELEMENT":        20,
		"INTERSECT_SET":                 21,
		"UNION_SET":                     22,
		"DIFFERENCE_SET":                23,
		"STORE_QUEUE":                   25,
		"LOAD_QUEUE":                    26,
		"PUSH_QUEUE_ELEMENT":            27,
		"POP_QUEUE_ELEMENT":             28,
		"STORE_STACK":                   29,
		"LOAD_STACK":                    30,
		"PUSH_STACK_ELEMENT":            31,
		"POP_STACK_ELEMENT":             32,
		"STORE_SORTED_SET":              33,
		"LOAD_SORTED_SET":               34,
		"CONTAINERS_SORTED_SET_ELEMENT": 35,
		"INTERSECT_SORTED_SET":          36,
		"UNION_SORTED_SET":              37,
		"DIFFERENCE_SORTED_SET":         38,
	}
)

func (x METHOD) Enum() *METHOD {
	p := new(METHOD)
	*p = x
	return p
}

func (x METHOD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (METHOD) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[1].Descriptor()
}

func (METHOD) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[1]
}

func (x METHOD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use METHOD.Descriptor instead.
func (METHOD) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        TYPE     `protobuf:"varint,1,opt,name=type,proto3,enum=TYPE" json:"type,omitempty"`
	IntValue    *int64   `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof" json:"int_value,omitempty"`
	FloatValue  *float64 `protobuf:"fixed64,3,opt,name=float_value,json=floatValue,proto3,oneof" json:"float_value,omitempty"`
	BytesValue  []byte   `protobuf:"bytes,4,opt,name=bytes_value,json=bytesValue,proto3,oneof" json:"bytes_value,omitempty"`
	StringValue *string  `protobuf:"bytes,5,opt,name=string_value,json=stringValue,proto3,oneof" json:"string_value,omitempty"`
	BoolValue   *bool    `protobuf:"varint,6,opt,name=bool_value,json=boolValue,proto3,oneof" json:"bool_value,omitempty"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Object) GetType() TYPE {
	if x != nil {
		return x.Type
	}
	return TYPE_INTEGER
}

func (x *Object) GetIntValue() int64 {
	if x != nil && x.IntValue != nil {
		return *x.IntValue
	}
	return 0
}

func (x *Object) GetFloatValue() float64 {
	if x != nil && x.FloatValue != nil {
		return *x.FloatValue
	}
	return 0
}

func (x *Object) GetBytesValue() []byte {
	if x != nil {
		return x.BytesValue
	}
	return nil
}

func (x *Object) GetStringValue() string {
	if x != nil && x.StringValue != nil {
		return *x.StringValue
	}
	return ""
}

func (x *Object) GetBoolValue() bool {
	if x != nil && x.BoolValue != nil {
		return *x.BoolValue
	}
	return false
}

type Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username *string `protobuf:"bytes,1,opt,name=username,proto3,oneof" json:"username,omitempty"`
	Password *string `protobuf:"bytes,2,opt,name=password,proto3,oneof" json:"password,omitempty"`
}

func (x *Login) Reset() {
	*x = Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login) ProtoMessage() {}

func (x *Login) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login.ProtoReflect.Descriptor instead.
func (*Login) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *Login) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *Login) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Method  METHOD `protobuf:"varint,2,opt,name=method,proto3,enum=METHOD" json:"method,omitempty"`
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *Request) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Request) GetMethod() METHOD {
	if x != nil {
		return x.Method
	}
	return METHOD_LOGIN
}

func (x *Request) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xab, 0x02, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x54, 0x59, 0x50, 0x45, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x0a,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x02, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x62,
	0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x04, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x63, 0x0a,
	0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x56, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x1f, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x07, 0x2e, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2a, 0x42, 0x0a, 0x04, 0x54, 0x59,
	0x50, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x59,
	0x54, 0x45, 0x53, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x04, 0x2a, 0xb5,
	0x06, 0x0a, 0x06, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x5f, 0x45, 0x4e,
	0x43, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x5f, 0x44, 0x45, 0x43,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4b, 0x45, 0x59,
	0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47,
	0x4c, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x4c,
	0x4f, 0x41, 0x44, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43,
	0x54, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x53,
	0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x06, 0x12, 0x0e,
	0x0a, 0x0a, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x07, 0x12, 0x0d,
	0x0a, 0x09, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x08, 0x12, 0x1e, 0x0a,
	0x1a, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x09, 0x12, 0x1e, 0x0a,
	0x1a, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0a, 0x12, 0x20, 0x0a,
	0x1c, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x4c, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x0b, 0x12,
	0x12, 0x0a, 0x0e, 0x50, 0x4f, 0x50, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x46, 0x52, 0x4f, 0x4e,
	0x54, 0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x50, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f,
	0x42, 0x41, 0x43, 0x4b, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f,
	0x4d, 0x41, 0x50, 0x10, 0x0e, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x4d,
	0x41, 0x50, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x4b, 0x45,
	0x59, 0x10, 0x0f, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4d, 0x41, 0x50, 0x10,
	0x10, 0x12, 0x1b, 0x0a, 0x17, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4d, 0x41, 0x50, 0x5f, 0x45, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x11, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x12, 0x12, 0x0c, 0x0a,
	0x08, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x13, 0x12, 0x1a, 0x0a, 0x16, 0x43,
	0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x53, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x45, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x14, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x53, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x15, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x16, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x49, 0x46,
	0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x17, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x19, 0x12, 0x0e,
	0x0a, 0x0a, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x1a, 0x12, 0x16,
	0x0a, 0x12, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x45, 0x4c, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x10, 0x1b, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f, 0x50, 0x5f, 0x51, 0x55,
	0x45, 0x55, 0x45, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x1c, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x43, 0x4b, 0x10, 0x1d, 0x12, 0x0e,
	0x0a, 0x0a, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x43, 0x4b, 0x10, 0x1e, 0x12, 0x16,
	0x0a, 0x12, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x45, 0x4c, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x10, 0x1f, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f, 0x50, 0x5f, 0x53, 0x54,
	0x41, 0x43, 0x4b, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x20, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x45,
	0x54, 0x10, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x4f, 0x52, 0x54,
	0x45, 0x44, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x22, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4e, 0x54,
	0x41, 0x49, 0x4e, 0x45, 0x52, 0x53, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x45,
	0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x23, 0x12, 0x18, 0x0a, 0x14, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x53, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f,
	0x53, 0x45, 0x54, 0x10, 0x24, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x25, 0x12, 0x19, 0x0a, 0x15, 0x44,
	0x49, 0x46, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x45, 0x44,
	0x5f, 0x53, 0x45, 0x54, 0x10, 0x26, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_message_proto_goTypes = []interface{}{
	(TYPE)(0),       // 0: TYPE
	(METHOD)(0),     // 1: METHOD
	(*Object)(nil),  // 2: Object
	(*Login)(nil),   // 3: Login
	(*Request)(nil), // 4: Request
}
var file_message_proto_depIdxs = []int32{
	0, // 0: Object.type:type_name -> TYPE
	1, // 1: Request.method:type_name -> METHOD
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
